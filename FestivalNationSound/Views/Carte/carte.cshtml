@{
    ViewData["Title"] = "Carte du festival";
}

<h1 class="d-flex justify-content-center"><strong>@ViewData["Title"]</strong></h1>


<div class="row  g-2" id="filtreCarte">
    <div class="col">
        <div class="form-floating">
            <input type="time" class="form-control" id="filtreTime">
            <label for="filtre">Concert en cours</label>
        </div>
    </div>
    <div class="col">
        <div class="form-floating">
            <select class="form-select" id="filtre" onchange="filtre(this)">
                <option value="0" selected>Que cherchez vous ?</option>
                <option value="1"> Les stands de restauration</option>
                <option value="2"> Les points d'eau et WC'</option>
                <option value="3">Les scènes</option>
                <option value="4">Les postes de secours</option>
                <option value="5">Les points d'info'</option>
                <option value="6">Les stands de rafraichissement'</option>
            </select>
            <label for="filtre"> Catégorie</label>
        </div>
    </div>
</div>
<div id="map" class="mt-2"></div>

<script>
    var map = L.map('map').setView([43.5722311, 3.9520572], 18);
    L.tileLayer('https://api.maptiler.com/maps/bright-v2/{z}/{x}/{y}.png?key=vPDbnH44AMxWsEoPTW5d', {
        attribution: '<a href="https://www.maptiler.com/copyright/" target="_blank">&copy; MapTiler</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>'
    }).addTo(map);
          var restaurantIcon = L.icon({
        iconUrl: '/images/icone/burger-svgrepo-com.png',
        iconSize: [32, 32],
        iconAnchor: [16, 32],
        popupAnchor: [0, -32]
    });
    var rafraichissementIcon = L.icon({
        iconUrl: '/images/icone/drink-straw-svgrepo-com.png',
        iconSize: [32, 32],
        iconAnchor: [16, 32],
        popupAnchor: [0, -32]
    });
    var sceneIcon = L.icon({
        iconUrl: '/images/icone/concert-svgrepo-com.png',
        iconSize: [32, 32],
        iconAnchor: [16, 32],
        popupAnchor: [0, -32]
    });
    var infoIcon = L.icon({
        iconUrl: '/images/icone/info-borderless-svgrepo-com.png',
        iconSize: [32, 32],
        iconAnchor: [16, 32],
        popupAnchor: [0, -32]
    });
    var toiletteIcon = L.icon({
        iconUrl: '/images/icone/wc-svgrepo-com.png',
        iconSize: [32, 32],
        iconAnchor: [16, 32],
        popupAnchor: [0, -32]
    });

        // Charger le fichier JSON


        // Groupes de marqueurs avec infobulles
        var restaurants = [
            L.marker([43.57218835367252, 3.951549613043562], { icon: restaurantIcon }).bindPopup("Restaurant 1 : Description ici"),
            L.marker([43.57213506956365, 3.950906429222877], { icon: restaurantIcon }).bindPopup("Restaurant 2 : Description ici"),
            L.marker([43.57186529638132, 3.9513217462690764], { icon: restaurantIcon }).bindPopup("Restaurant 3 : Description ici"),
            L.marker([43.572098754013346, 3.94978220894265], { icon: restaurantIcon }).bindPopup("Restaurant 4 : Description ici"),
            L.marker([43.57274205480563, 3.9510496419974284], { icon: restaurantIcon }).bindPopup("Restaurant 5 : Description ici  "),
            L.marker([43.57235296240567, 3.9508205015581463], { icon: restaurantIcon }).bindPopup("Restaurant 6 : Description ici")
        ];

        var rafraichissements = [
            L.marker([43.572441156903324, 3.950620003673775], { icon: rafraichissementIcon }).bindPopup("Stand de rafraîchissement 1"),
            L.marker([43.57289250319301, 3.9498609759686536], { icon: rafraichissementIcon }).bindPopup("Stand de rafraîchissement 2"),
            L.marker([43.57219213681276, 3.9518301516187333], { icon: rafraichissementIcon }).bindPopup("Stand de rafraîchissement 3"),
            L.marker([43.57277836996803, 3.9511570515783423], { icon: rafraichissementIcon }).bindPopup("Stand de rafraîchissement 4"),
            L.marker([43.57177710104039, 3.9501903653501214], { icon: rafraichissementIcon }).bindPopup("Stand de rafraîchissement 5"),
            L.marker([43.57220251267042, 3.950892107945422], { icon: rafraichissementIcon }).bindPopup("Stand de rafraîchissement 6")
        ];

        // var sceneMarkers = [
        //  L.marker([43.571590334009656, 3.9511642122170696], { icon: sceneIcon }).bindPopup("Scène Saturne"),
        // L.marker([43.5720883781378, 3.9504409877055857], { icon: sceneIcon }).bindPopup("Scène Mars"),
        // L.marker([43.57288212746601, 3.9522454686603594], { icon: sceneIcon }).bindPopup("Scène Neptune"),
        //  L.marker([43.573271216447175, 3.9508706260246678], { icon: sceneIcon }).bindPopup("Scène Jupiter"),
        //  L.marker([43.572031310802174, 3.949674799357164], { icon: sceneIcon }).bindPopup("Scène Galactique")
        // ];

            var sceneMarkersByHour = [
                {
                    hour: "18:00",
                    markers: [
                        L.marker([43.571590334009656, 3.9511642122170696], { icon: sceneIcon }).bindPopup("Scène Saturne à 18h"),
                        L.marker([43.5720883781378, 3.9504409877055857], { icon: sceneIcon }).bindPopup("Scène Mars à 18h")
                    ]
                },
                {
                    hour: "20:00",
                    markers: [
                        L.marker([43.57288212746601, 3.9522454686603594], { icon: sceneIcon }).bindPopup("Scène Neptune à 20h"),
                        L.marker([43.573271216447175, 3.9508706260246678], { icon: sceneIcon }).bindPopup("Scène Jupiter à 20h"),
                        L.marker([43.572031310802174, 3.949674799357164], { icon: sceneIcon }).bindPopup("Scène Galactique à 20h")
                    ]
                }
            ];

        var pointsEau = [
            L.marker([43.5725696366016, 3.950382467035972],{icon:toiletteIcon}).bindPopup("Point d'eau 1 : Eau potable"),
            L.marker([43.57373939393576, 3.9508212125092754],{icon:toiletteIcon}).bindPopup("Point d'eau 2 : Eau potable"),
            L.marker([43.57153548438385, 3.950517015647785],{icon:toiletteIcon}).bindPopup("Point d'eau 3 : Eau potable")
        ];

        var pointsInfo = [
            L.marker([43.571730448865196, 3.950318117699888], { icon: infoIcon }).bindPopup("Point info 1 : Informations générales"),
            L.marker([43.573052799993846, 3.9511897587068487], { icon: infoIcon }).bindPopup("Point info 2 : Assistance visiteurs")
        ];
       restaurants.forEach(marker => marker.addTo(map));
    rafraichissements.forEach(marker => marker.addTo(map));
    // sceneMarkers.forEach(marker => marker.addTo(map));
    pointsEau.forEach(marker => marker.addTo(map));
    pointsInfo.forEach(marker => marker.addTo(map));
    sceneMarkersByHour.forEach(group => {
                group.markers.forEach(marker => marker.addTo(map));});

    function filtre(event) {
        var selectedValue = event.value;

        // Masquer tous les marqueurs
        restaurants.forEach(marker => map.removeLayer(marker));
        rafraichissements.forEach(marker => map.removeLayer(marker));
        sceneMarkersByHour.forEach(group => {
                group.markers.forEach(marker => map.removeLayer(marker));});
        pointsEau.forEach(marker => map.removeLayer(marker));
        pointsInfo.forEach(marker => map.removeLayer(marker));

        // Afficher les marqueurs correspondant à la catégorie sélectionnée
        if (selectedValue === "0") {
            // Afficher tous les marqueurs
            restaurants.forEach(marker => marker.addTo(map));
            rafraichissements.forEach(marker => marker.addTo(map));
            sceneMarkersByHour.forEach(group => {
                group.markers.forEach(marker => marker.addTo(map));});
            pointsEau.forEach(marker => marker.addTo(map));
            pointsInfo.forEach(marker => marker.addTo(map));
        } else if (selectedValue === "1") {
            restaurants.forEach(marker => marker.addTo(map));
        } else if (selectedValue === "2") {
            pointsEau.forEach(marker => marker.addTo(map));
        }else if (selectedValue === "3") {
        // Masquer tous les marqueurs de scènes
        sceneMarkersByHour.forEach(group => {
            group.markers.forEach(marker => map.removeLayer(marker));
        });

        var selectedHour = document.getElementById("filtreTime").value.substring(0,5); // format "HH:mm"
        if (!selectedHour || selectedHour === ":") {
            // Afficher toutes les scènes si aucune heure n'est sélectionnée
            sceneMarkersByHour.forEach(group => {
                group.markers.forEach(marker => marker.addTo(map));
            });
        } else {
            // Afficher uniquement les scènes de l'heure sélectionnée
            filtrerScenesParHeure(selectedHour);
        }
    } else if (selectedValue === "4") {
            // Ajouter les marqueurs des postes de secours si nécessaire
        } else if (selectedValue === "5") {
            pointsInfo.forEach(marker => marker.addTo(map));
        } else if (selectedValue === "6") {
            rafraichissements.forEach(marker => marker.addTo(map));
        }
    };
        function filtrerScenesParHeure(selectedHour) {
        // Masquer tous les marqueurs de scènes
        sceneMarkersByHour.forEach(group => {
            group.markers.forEach(marker => map.removeLayer(marker));
        });

        // Trouver le groupe correspondant à l'heure sélectionnée
        var group = sceneMarkersByHour.find(g => g.hour === selectedHour);
        if (group) {
            group.markers.forEach(marker => marker.addTo(map));
        }
        }
        document.getElementById('filtreTime').addEventListener('change', function() {
        var selectedHour = this.value.substring(0,5); // format "HH:mm"
        filtrerScenesParHeure(selectedHour);
    });



</script>
